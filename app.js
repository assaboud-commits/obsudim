// Mini App v14 ‚Äî —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –∫–ª–∏–∫–∞–º–∏ –∏ –∞–≤—Ç–æ-—Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–µ–π
const TG = window.Telegram ? window.Telegram.WebApp : null;
const app = document.getElementById('app');
const backBtn = document.getElementById('backBtn');
const langRu = document.getElementById('langRu');
const langEn = document.getElementById('langEn');
const greetEl = document.getElementById('greet');
const tBack = document.getElementById('t_back');

const NAV = [];
const STATE = { lang: 'ru' };

// === –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è ===
const I18N = {
  ru: {
    greet: "–ü—Ä–∏–≤–µ—Ç, –Ω–∞–¥–µ—é—Å—å, –º—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ!)",
    menu_calendar: "–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π",
    menu_rules: "–ü—Ä–∞–≤–∏–ª–∞",
    soon: "–°–∫–æ—Ä–æ",
    open_calendar: "–û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å",
    open: "–û—Ç–∫—Ä—ã—Ç—å",
    calendar_select_title: "–ö–∞–ª–µ–Ω–¥–∞—Ä—å ‚Äî –≤—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª",
    intl: "–ó–∞—Ä—É–±–µ–∂–Ω—ã–µ —Å—Ç–∞—Ä—Ç—ã",
    rus: "–†–æ—Å—Å–∏–π—Å–∫–∏–µ —Å—Ç–∞—Ä—Ç—ã",
    rules_soon: "–ó–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –ø—Ä–∞–≤–∏–ª–∞ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.",
    back: "–ù–∞–∑–∞–¥",
    official: "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞",
    men: "–ú—É–∂—á–∏–Ω—ã", women: "–ñ–µ–Ω—â–∏–Ω—ã", pairs: "–ü–∞—Ä—ã", dance: "–¢–∞–Ω—Ü—ã –Ω–∞ –ª—å–¥—É",
    gp: "–ì—Ä–∞–Ω-–ø—Ä–∏", gpf: "–§–∏–Ω–∞–ª –ì—Ä–∞–Ω-–ø—Ä–∏", worlds: "–ß–µ–º–ø–∏–æ–Ω–∞—Ç –º–∏—Ä–∞",
    euros: "–ß–µ–º–ø–∏–æ–Ω–∞—Ç –ï–≤—Ä–æ–ø—ã", oly: "–û–ª–∏–º–ø–∏–∞–¥–∞"
  },
  en: {
    greet: "Hi, we hope to help you!",
    menu_calendar: "Competition Calendar",
    menu_rules: "Rules",
    soon: "Soon",
    open_calendar: "Open Calendar",
    open: "Open",
    calendar_select_title: "Calendar ‚Äî choose a section",
    intl: "International Events",
    rus: "Russian Events",
    rules_soon: "Rules and useful materials will appear here soon.",
    back: "Back",
    official: "Official page",
    men: "Men", women: "Women", pairs: "Pairs", dance: "Ice Dance",
    gp: "Grand Prix", gpf: "Grand Prix Final", worlds: "World Championships",
    euros: "European Championships", oly: "Olympics"
  }
};

function t(k){return I18N[STATE.lang][k]||k;}

function saveLang(){try{localStorage.setItem('lang',STATE.lang);}catch(e){}}
function loadLang(){try{const v=localStorage.getItem('lang');if(v)STATE.lang=v;}catch(e){}}

function setLang(lang){
  STATE.lang=lang;
  langRu.classList.toggle('active',lang==='ru');
  langEn.classList.toggle('active',lang==='en');
  greetEl.textContent=t('greet');
  tBack.textContent=t('back');
  saveLang();
  // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç —ç–∫—Ä–∞–Ω
  if (NAV.length) render();
}

langRu.addEventListener('click',()=>setLang('ru'));
langEn.addEventListener('click',()=>setLang('en'));

// === –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è ===
function translit(str){
  if(!str) return '';
  const map = {
    –ê:'A',–ë:'B',–í:'V',–ì:'G',–î:'D',–ï:'E',–Å:'Yo',–ñ:'Zh',–ó:'Z',–ò:'I',–ô:'Y',
    –ö:'K',–õ:'L',–ú:'M',–ù:'N',–û:'O',–ü:'P',–†:'R',–°:'S',–¢:'T',–£:'U',–§:'F',
    –•:'Kh',–¶:'Ts',–ß:'Ch',–®:'Sh',–©:'Sch',–´:'Y',–≠:'E',–Æ:'Yu',–Ø:'Ya',
    –¨:'',–™:'', –∞:'a',–±:'b',–≤:'v',–≥:'g',–¥:'d',–µ:'e',—ë:'yo',–∂:'zh',–∑:'z',–∏:'i',
    –π:'y',–∫:'k',–ª:'l',–º:'m',–Ω:'n',–æ:'o',–ø:'p',—Ä:'r',—Å:'s',—Ç:'t',—É:'u',—Ñ:'f',
    —Ö:'kh',—Ü:'ts',—á:'ch',—à:'sh',—â:'sch',—ã:'y',—ç:'e',—é:'yu',—è:'ya'
  };
  return str.split('').map(ch=>map[ch]||ch).join('');
}
function maybeTranslit(name){
  return STATE.lang === 'en' && /[–ê-–Ø–∞-—è–Å—ë]/.test(name) ? translit(name) : name;
}

// === –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã ===
function fmtDateRange(a,b){
  const opts={day:'2-digit',month:'2-digit',year:'numeric'};
  const da=new Date(a),db=new Date(b);
  if(da.toDateString()===db.toDateString())
    return da.toLocaleDateString(STATE.lang==='ru'?'ru-RU':'en-GB',opts);
  const sm=da.getMonth()===db.getMonth()&&da.getFullYear()===db.getFullYear();
  const d=n=>String(n).padStart(2,'0');
  if(sm)return`${da.getDate()}‚Äì${db.getDate()}.${d(db.getMonth()+1)}.${db.getFullYear()}`;
  const aS=da.toLocaleDateString(STATE.lang==='ru'?'ru-RU':'en-GB',{day:'2-digit',month:'2-digit'});
  const bS=db.toLocaleDateString(STATE.lang==='ru'?'ru-RU':'en-GB',{day:'2-digit',month:'2-digit'});
  return`${aS}‚Äì${bS}.${db.getFullYear()}`;
}

// === –¶–≤–µ—Ç–∞ —Ç—É—Ä–Ω–∏—Ä–æ–≤ ===
function classify(it){
  const n=(it.name||'').toLowerCase();
  if(n.includes('grand prix final')||n.includes('—Ñ–∏–Ω–∞–ª –≥—Ä–∞–Ω-–ø—Ä–∏'))return'gpf';
  if(n.includes('grand prix')||n.includes('–≥—Ä–∞–Ω-–ø—Ä–∏'))return'gp';
  if(n.includes('world')||n.includes('–º–∏—Ä'))return'worlds';
  if(n.includes('europe')||n.includes('–µ–≤—Ä–æ–ø'))return'euros';
  if(n.includes('olymp'))return'oly';
  return'';
}
function colorForClass(c){
  return c==='gpf'?'#2563eb':c==='gp'?'#0ea5e9':c==='worlds'?'#16a34a':c==='euros'?'#f59e0b':c==='oly'?'#ef4444':'#821130';
}

// === –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ ===
function chips(it){
  const cls=classify(it),base=colorForClass(cls)+'cc';
  const place=[it.city,it.country].filter(Boolean).join(', ');
  return `<div class="subtags">
    <span class="subtag" style="background:${base}">üìÖ ${fmtDateRange(it.start,it.end)}</span>
    ${place?`<span class="subtag" style="background:${base}">üìç ${place}</span>`:''}
  </div>`;
}

function listView(items,kind){
  const sorted=items.slice().sort((a,b)=>new Date(a.start)-new Date(b.start));
  return `<div class="list">
    ${sorted.map((it,i)=>{
      const cls=classify(it);
      const labelMap={gp:t('gp'),gpf:t('gpf'),worlds:t('worlds'),euros:t('euros'),oly:t('oly')};
      const label=labelMap[cls]||'';
      return `<a class="event ${cls?`is-${cls}`:''}" data-kind="${kind}" data-idx="${i}">
        <div><strong>${maybeTranslit(it.name)}</strong> ${label?`<span class="subtag" style="background:${colorForClass(cls)}33;color:#000;border:1px solid ${colorForClass(cls)}55">${label}</span>`:''}</div>
        ${chips(it)}
      </a>`;
    }).join('')}
  </div>`;
}

function columnList(title,arr){
  if(!arr?.length)return'';
  return `<div class="card" style="min-width:220px">
    <div class="title">${title}</div>
    <ul style="margin:8px 0 0 16px; padding:0">
      ${arr.map(n=>`<li style="margin:6px 0">${maybeTranslit(n)}</li>`).join('')}
    </ul></div>`;
}

// === –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è ===
function view_menu(){
  backBtn.style.display='none';
  return `<div class="grid view">
    <div class="card">
      <div class="title">${t('menu_calendar')}</div>
      <p class="muted">${STATE.lang==='ru'
        ?'–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –∏ —Å–º–æ—Ç—Ä–∏ –¥–∞—Ç—ã, —Å—Å—ã–ª–∫–∏ –∏ —Å–æ—Å—Ç–∞–≤—ã.'
        :'Choose a section to view dates, links and entries.'}</p>
      <button class="btn primary" id="btnCalendar">${t('open_calendar')}</button>
    </div>
    <div class="card">
      <div class="title">${t('menu_rules')}</div>
      <p class="muted">${t('rules_soon')}</p>
      <button class="btn" id="btnRules" disabled>${t('soon')}</button>
    </div>
  </div>`;
}

function view_calendar_select(){
  backBtn.style.display='inline-flex';
  return `<div class="card view">
    <div class="title">${t('calendar_select_title')}</div>
    <div class="grid" style="margin-top:10px">
      <div class="card">
        <div class="title">${t('intl')}</div>
        <p class="muted">${STATE.lang==='ru'
          ?'ISU: –ì—Ä–∞–Ω-–ø—Ä–∏, –ß–ú, –ß–ï, –û–ª–∏–º–ø–∏–∞–¥–∞ –∏ –¥—Ä.'
          :'ISU: Grand Prix, Worlds, Euros, Olympics etc.'}</p>
        <button class="btn primary" id="btnIntl">${t('open')}</button>
      </div>
      <div class="card">
        <div class="title">${t('rus')}</div>
        <p class="muted">${STATE.lang==='ru'
          ?'–ö–∞–ª–µ–Ω–¥–∞—Ä—å –§–§–ö–ö–† –∏ –≤—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ç—É—Ä–Ω–∏—Ä—ã'
          :'FFKR calendar and national events'}</p>
        <button class="btn primary" id="btnRus">${t('open')}</button>
      </div>
    </div>
  </div>`;
}

function view_event_details(kind,idx){
  backBtn.style.display='inline-flex';
  const items=(kind==='international'?DATA.international:DATA.russian)||[];
  const it=items[idx];
  const cls=classify(it);
  const topBorder=colorForClass(cls);
  const p=it.participants||{men:[],women:[],pairs:[],dance:[]};
  return `<div class="card view" style="border-top:4px solid ${topBorder}">
    <div class="title">${maybeTranslit(it.name)}</div>
    ${chips(it)}
    <div style="margin-top:10px">
      ${it.url?`<a class="btn" href="${it.url}" target="_blank">üåê ${t('official')}</a>`:''}
      ${it.entries?` <a class="btn" href="${it.entries}" target="_blank">üìù Entries</a>`:''}
    </div>
    <div class="grid" style="margin-top:12px">
      ${columnList(t('men'),p.men)}
      ${columnList(t('women'),p.women)}
      ${columnList(t('pairs'),p.pairs)}
      ${columnList(t('dance'),p.dance)}
    </div>
  </div>`;
}

// === Router ===
function render(){
  const top = NAV[NAV.length-1];
  const view = top ? top.view : 'menu';
  let html='';

  if(view==='menu') html=view_menu();
  if(view==='calendar_select') html=view_calendar_select();
  if(view==='calendar_list'){
    const kind=top.params.kind;
    const items=(kind==='international'?DATA.international:DATA.russian)||[];
    html=`<div class="card view"><div class="title">${kind==='international'?t('intl'):t('rus')}</div>${listView(items,kind)}</div>`;
  }
  if(view==='event_details') html=view_event_details(top.params.kind,top.params.idx);

  app.innerHTML = html;

  // –Ω–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞
  requestAnimationFrame(() => {
    if(view==='menu'){
      document.getElementById('btnCalendar')?.addEventListener('click',()=>go('calendar_select'));
    }
    if(view==='calendar_select'){
      document.getElementById('btnIntl')?.addEventListener('click',()=>go('calendar_list',{kind:'international'}));
      document.getElementById('btnRus')?.addEventListener('click',()=>go('calendar_list',{kind:'russian'}));
    }
    if(view==='calendar_list'){
      document.querySelectorAll('.event').forEach(el=>{
        el.addEventListener('click',()=>{
          const kind=el.getAttribute('data-kind');
          const idx=+el.getAttribute('data-idx');
          go('event_details',{kind,idx});
        });
      });
    }
  });

  backBtn.style.display = NAV.length>1?'inline-flex':'none';
  tBack.textContent = t('back');
}

// === –ù–∞–≤–∏–≥–∞—Ü–∏—è ===
function go(view, params={}) {
  if(NAV.length===0 || NAV[NAV.length-1].view!==view || JSON.stringify(NAV[NAV.length-1].params)!==JSON.stringify(params)){
    NAV.push({view, params});
  }
  render();
}
function back(){
  NAV.pop();
  render();
}
backBtn.addEventListener('click', back);

// === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
async function load(){
  try{
    const res=await fetch('calendar.json',{cache:'no-store'});
    if(!res.ok) throw new Error('HTTP '+res.status);
    window.DATA=await res.json();
  }catch(e){
    window.DATA={season:"2025‚Äì2026",international:[],russian:[]};
  }
  render();
}

// === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
loadLang();
STATE.lang = STATE.lang || 'ru';
setLang(STATE.lang);
NAV.push({view:'menu',params:{}});
load();

// === Telegram-—Ç–µ–º–∞ ===
(function applyTheme(){
  if(!TG||!TG.themeParams) return;
  const t=TG.themeParams, r=document.documentElement;
  if(t.bg_color) r.style.setProperty('--bg',t.bg_color);
  if(t.secondary_bg_color) r.style.setProperty('--card',t.secondary_bg_color);
  if(t.text_color) r.style.setProperty('--text',t.text_color);
  if(t.hint_color) r.style.setProperty('--muted',t.hint_color);
  if(t.link_color) r.style.setProperty('--accent',t.link_color);
  if(t.section_separator_color) r.style.setProperty('--border',t.section_separator_color);
  try{TG.onEvent&&TG.onEvent('themeChanged',applyTheme);}catch(e){}
})();
